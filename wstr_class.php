<?phpClass WSTR{    protected static $instance = null;    function __construct () {        add_action('wp_enqueue_scripts', array($this, 'wstr_scripts'));        add_action('wp_enqueue_scripts', array($this, 'wstr_styles'));    }    public function wstr_styles(){        wp_enqueue_style('wstr_main_css', plugins_url('/css/style.css', __FILE__), '', ROLL_VERSION);    }    public function wstr_scripts() {        wp_enqueue_script('wstr_main_js', plugins_url('/js/script.js', __FILE__),array('jquery'), ROLL_VERSION, true);        $args  = array('post_type' => 'wstr');        $pages = get_posts($args);        global $post;        $all_pages_id = $post->ID;        foreach ($pages as $page) {            $option      = $page->ID;            $roll_settings = get_post_meta($option, 'wstr_scroll_top_pages', true);                if($roll_settings === 'on'){                    $meta_option = get_post_meta($option, 'wstr_scroll_top', true);                    if($meta_option['button_style'] == 'image'){                        $array = array(                            'img_url' => $meta_option['img_url'],                            'button_margin' => $meta_option['button_margin'],                            'button_width' => $meta_option['width'],                            'button_height' => $meta_option['height'],                            'window_max_width' => $meta_option['window_max_width'],                            'button_position' => $meta_option['button_position'],                            'button_style' => $meta_option['button_style'],                            'animation_speed' => $meta_option['elem_speed'],                        );                    }else if($meta_option['button_style'] == 'text'){                        $array = array(                            'button_margin' => $meta_option['button_margin'],                            'button_width' => $meta_option['width'],                            'button_height' => $meta_option['height'],                            'window_max_width' => $meta_option['window_max_width'],                            'button_border' => $meta_option['elem_border'],                            'button_position' => $meta_option['button_position'],                            'button_style' => $meta_option['button_style'],                            'elem_text' => $meta_option['elem_text'],                            'elem_color' => $meta_option['elem_color'],                            'elem_bgcolor' => $meta_option['elem_bgcolor'],                            'animation_speed' => $meta_option['elem_speed'],                        );                    }                    wp_localize_script('wstr_main_js', 'my_options', $array);                }else{                    foreach ((array)$roll_settings as $val) {                        if($val == $all_pages_id){                            $meta_option = get_post_meta($option, 'wstr_scroll_top', true);                            if($meta_option['button_style'] == 'image'){                                $array = array(                                    'img_url' => $meta_option['img_url'],                                    'button_margin' => $meta_option['button_margin'],                                    'button_width' => $meta_option['width'],                                    'button_height' => $meta_option['height'],                                    'window_max_width' => $meta_option['window_max_width'],                                    'button_position' => $meta_option['button_position'],                                    'button_style' => $meta_option['button_style'],                                    'animation_speed' => $meta_option['elem_speed'],                                );                            }else if($meta_option['button_style'] == 'text'){                                $array = array(                                    'button_margin' => $meta_option['button_margin'],                                    'button_width' => $meta_option['width'],                                    'button_height' => $meta_option['height'],                                    'window_max_width' => $meta_option['window_max_width'],                                    'button_border' => $meta_option['elem_border'],                                    'button_position' => $meta_option['button_position'],                                    'button_style' => $meta_option['button_style'],                                    'elem_text' => $meta_option['elem_text'],                                    'elem_color' => $meta_option['elem_color'],                                    'elem_bgcolor' => $meta_option['elem_bgcolor'],                                    'animation_speed' => $meta_option['elem_speed'],                                );                            }                            wp_localize_script('wstr_main_js', 'my_options', $array);                        }                    }            }        }    }    public static function get_instance() {        if (null == self::$instance) {            self::$instance = new self;        }        return self::$instance;    }}